#
# Containers for the webfactory: see the README
# Requires: docker > 1.8.1
# 

## ---- minimum: one webfact + mysql ###
mysql:
  labels:
    com.example.description: "Webfactory shared DB"
  container_name: mysql
  hostname: mysql
  image: mysql:5.6
  restart: always
  ports:
   - "3306:3306"        # adapt: only need for local dev
  volumes:
   - /opt/sites/mysql/varlib:/var/lib/mysql/
   - /opt/sites/mysql/data:/data
  environment:
   - MYSQL_ROOT_PASSWORD=my-secret-pw     # adapt
     # setup a DB for the webfact DB
   - MYSQL_DATABASE=d_webfact
   - MYSQL_USER=u_webfact 
   - MYSQL_PASSWORD=Aingo6xaingi  # sync with webfact below

webfact:
  labels:
    com.example.description: "Webfactory docker UI"
  container_name: webfact
  hostname: webfact 
  image: boran/drupal
  restart: always
  links:
   - mysql:mysql
  ports:
   - "8000:80"
  volumes:
   - /var/run/docker.sock:/var/run/docker.sock
   - /opt/sites:/opt/sites
   # Local development: Persistence of webfact container not needed
   - /opt/sites/webfact/www:/var/www/www
   - /opt/sites/webfact/data:/data
  environment:
   - MYSQL_HOST=mysql
   - MYSQL_DATABASE=d_webfact
   - MYSQL_USER=u_webfact 
   - MYSQL_PASSWORD=Aingo6xaingi  # sync with mysql above
     # mgt user for creating DBs for websites
   - WEBFACT_MANAGE_DB_USER=webfact_create
   - WEBFACT_MANAGE_DB_PW=ho4iaH4o       # adapt

   - DRUPAL_SITE_NAME=WebFactory
   - DRUPAL_ADMIN_EMAIL=drupal@webfact.docker # adapt
   - DRUPAL_SITE_EMAIL=drupal@webfact.docker  # adapt
     # Build webfactory within the container:
   - DRUPAL_MAKE_REPO=https://github.com/Boran/webfact-make
   - DRUPAL_MAKE_DIR=webfact-make
   - DRUPAL_INSTALL_PROFILE=webfactp
   - DRUPAL_FINAL_SCRIPT=/opt/drush-make/webfact-make/scripts/final.sh

   - VIRTUAL_HOST=webfact.docker  # used by nginx-proxy routing

     # if proxies needed for download during installation
   #- https_proxy=http://proxy.example.ch:80
   #- http_proxy=http://proxy.example.ch:80
   #- no_proxy=localhost,127.0.0.1,.local,.docker


##### Advanced: reverse proxy for port to container mapping #####
nginx:
  labels:
    com.example.description: "Webfact nginx reverse proxy"
  image: nginx
  container_name: nginx
  hostname: nginx
  restart: always
  ports:
  # local mac with portmapping:
   - "8080:80"
  # - "8443:443"
  # on a server:           # adapt
  # - "80:80"
  # - "443:443"
  volumes:
  - /opt/sites/nginx/conf:/etc/nginx/conf.d  # adapt
  - /opt/sites/nginx/certs:/etc/nginx/certs  # adapt

nginx-gen:
  labels:
    com.example.description: "Webfact nginx config generator"
  image: jwilder/docker-gen
  container_name: nginx-gen
  hostname: nginx-gen
  restart: always
  volumes_from:
  - nginx
  volumes:
  - /var/run/docker.sock:/tmp/docker.sock:ro
  - /opt/sites/nginx-gen/templates:/etc/docker-gen/templates 
  command: -notify-sighup nginx -watch -only-exposed /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf


## options to consider depending on environment
  #log_driver: "syslog"    # optional
  #mem_limit: 500m     # optional: limit resources
  #restart: never
  #environment:
   # Internet access via a proxy?
   # Webfact: optional SSL, will also need ports: - "8443:443"
   #- DRUPAL_SSL=yes
   #- WEBFACT_BACKUP=no
   #- DRUPAL_DEBUG=true                    # troubleshooting drupal install



